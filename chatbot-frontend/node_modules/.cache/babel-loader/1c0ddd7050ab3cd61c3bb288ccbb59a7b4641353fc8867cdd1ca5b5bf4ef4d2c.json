{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranali\\\\Git_Workspace\\\\Ai_chatbot\\\\ai_chatbot\\\\chatbot-frontend\\\\src\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, List, ListItem, Typography, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleQuery = async () => {\n    if (!query.trim()) return; // Prevent sending empty queries\n\n    setLoading(true); // Set loading state to true\n    try {\n      const response = await axios.post(\"http://localhost:8000/query\", {\n        query\n      });\n      // Add the query and response to the conversation history\n      setHistory([...history, {\n        query,\n        response: response.data.response\n      }]);\n      setQuery(\"\"); // Clear the input after submission\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      // Handle any error (you could also set an error message to show in the UI)\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"AI-Powered Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter your query\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        disabled: loading // Disable input while loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleQuery,\n      style: {\n        marginTop: \"10px\"\n      },\n      disabled: loading || !query.trim() // Disable button when loading or query is empty\n      ,\n      children: loading ? \"Submitting...\" : \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: history.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontWeight: \"bold\",\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: item.query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontWeight: \"bold\",\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: typeof item.response === \"object\" ? JSON.stringify(item.response, null, 2) : item.response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"0kMARXKxGg+hZszpMnMMk+rCB2c=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","Container","TextField","Button","List","ListItem","Typography","Box","jsxDEV","_jsxDEV","Chatbot","_s","query","setQuery","history","setHistory","loading","setLoading","handleQuery","trim","response","post","data","error","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","fullWidth","label","value","onChange","e","target","disabled","onClick","style","marginTop","map","item","index","fontWeight","mt","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Pranali/Git_Workspace/Ai_chatbot/ai_chatbot/chatbot-frontend/src/Chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, TextField, Button, List, ListItem, Typography, Box } from \"@mui/material\";\r\n\r\nconst Chatbot = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleQuery = async () => {\r\n    if (!query.trim()) return; // Prevent sending empty queries\r\n\r\n    setLoading(true); // Set loading state to true\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/query\", { query });\r\n      // Add the query and response to the conversation history\r\n      setHistory([...history, { query, response: response.data.response }]);\r\n      setQuery(\"\"); // Clear the input after submission\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      // Handle any error (you could also set an error message to show in the UI)\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        AI-Powered Chatbot\r\n      </Typography>\r\n\r\n      <Box mb={2}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Enter your query\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          disabled={loading} // Disable input while loading\r\n        />\r\n      </Box>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleQuery}\r\n        style={{ marginTop: \"10px\" }}\r\n        disabled={loading || !query.trim()} // Disable button when loading or query is empty\r\n      >\r\n        {loading ? \"Submitting...\" : \"Submit\"}\r\n      </Button>\r\n\r\n      <List style={{ marginTop: \"20px\" }}>\r\n        {history.map((item, index) => (\r\n          <ListItem key={index}>\r\n            <Box>\r\n              <Typography variant=\"body1\" fontWeight=\"bold\">You:</Typography>\r\n              <Typography variant=\"body1\">{item.query}</Typography>\r\n            </Box>\r\n            <Box mt={1}>\r\n              <Typography variant=\"body1\" fontWeight=\"bold\">Bot:</Typography>\r\n              {/* Format bot response cleanly */}\r\n              <Typography variant=\"body1\">\r\n                {typeof item.response === \"object\" ? JSON.stringify(item.response, null, 2) : item.response}\r\n              </Typography>\r\n            </Box>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}