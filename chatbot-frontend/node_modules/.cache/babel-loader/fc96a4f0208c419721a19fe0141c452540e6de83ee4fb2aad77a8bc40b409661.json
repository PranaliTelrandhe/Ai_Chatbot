{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranali\\\\Git_Workspace\\\\Ai_chatbot\\\\ai_chatbot\\\\chatbot-frontend\\\\src\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, List, ListItem, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [query, setQuery] = useState(\"\"); // State to hold user input\n  const [history, setHistory] = useState([]); // State to hold chat history\n  const [loading, setLoading] = useState(false); // Loading state\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page refresh\n    if (!query.trim()) return; // Prevent empty queries\n\n    setLoading(true); // Show loading indicator\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/query\", {\n        query\n      });\n      setHistory([...history, {\n        query,\n        response: response.data.response\n      }]); // Update chat history\n      setQuery(\"\"); // Clear input after submission\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"AI-Powered Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter your query\",\n        value: query,\n        onChange: e => setQuery(e.target.value) // Update query state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        style: {\n          marginTop: \"10px\"\n        },\n        disabled: loading,\n        children: [loading ? \"Loading...\" : \"Submit\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: history.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), \" \", item.query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), \" \", JSON.stringify(item.response)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"0kMARXKxGg+hZszpMnMMk+rCB2c=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","Container","TextField","Button","List","ListItem","Typography","jsxDEV","_jsxDEV","Chatbot","_s","query","setQuery","history","setHistory","loading","setLoading","handleSubmit","e","preventDefault","trim","response","post","data","error","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","value","onChange","target","type","style","marginTop","disabled","map","item","index","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Pranali/Git_Workspace/Ai_chatbot/ai_chatbot/chatbot-frontend/src/Chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, TextField, Button, List, ListItem, Typography } from \"@mui/material\";\r\n\r\nconst Chatbot = () => {\r\n  const [query, setQuery] = useState(\"\");  // State to hold user input\r\n  const [history, setHistory] = useState([]);  // State to hold chat history\r\n  const [loading, setLoading] = useState(false);  // Loading state\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent page refresh\r\n    if (!query.trim()) return; // Prevent empty queries\r\n\r\n    setLoading(true);  // Show loading indicator\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/query\", { query });\r\n      setHistory([...history, { query, response: response.data.response }]); // Update chat history\r\n      setQuery(\"\"); // Clear input after submission\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);  // Hide loading indicator\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>AI-Powered Chatbot</Typography>\r\n\r\n      {/* Form Submission */}\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Enter your query\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)} // Update query state\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" style={{ marginTop: \"10px\" }} disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Submit\"} {/* Show loading state */}\r\n        </Button>\r\n      </form>\r\n\r\n      {/* Chat History */}\r\n      <List>\r\n        {history.map((item, index) => (\r\n          <ListItem key={index}>\r\n            <Typography><strong>You:</strong> {item.query}</Typography>\r\n            <Typography><strong>Bot:</strong> {JSON.stringify(item.response)}</Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}